#!/bin/bash

ROLE_NAME=provision
DIR=~/.ansible/roles/$ROLE_NAME
GIT_BASE=${GIT_BASE:-https://github.com/moshloop}
DEV_MODE=${DEV_MODE:-false}
PLAYBOOK=.ansible-$ROLE_NAME.yml
inventory=
ARGS=

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "USAGE: ansible-$ROLE_NAME [any ansible-playbook arguments]"
    echo "Use ansible-$ROLE_NAME install to install the ansible roles only without execution"
    exit
fi
while getopts ":i: " opt; do
  case $opt in
    i)
    inventory=$OPTARG
      ;;
    esac
done

if [[ "$inventory" == "" && -d inventory ]]; then
  ARGS+=" -i inventory"
  inventory="inventory"
fi

ARG1=$1

checkout_role() {
  DIR=~/.ansible/roles/$1
  if [[ ! -e $DIR ]]; then
    git clone $GIT_BASE/ansible-$1.git $DIR
  fi
  pwd=$(pwd)

  if [[ "$ARG1" == "install" ]]; then
    return
  elif [[  "$ARG1" == "update" ]]; then
    cd $DIR
    git fetch --all
    cd $pwd
    return
  fi

  filter="._meta.hostvars | values[] | .ansible_$1_version"
  desired_tag=$( ansible-inventory -i $inventory --list | jq -r "$filter" | head -n1)

  pwd=$(pwd)
  cd $DIR
  current_tag=$(git describe --tags)

  if [[ "$desired_tag" != "null" && "$desired_tag" != "" && "$desired_tag" != "$current_tag" ]]; then
    echo "Checking out $desired_tag"
    git fetch
    git checkout $desired_tag
  fi
  echo "Using ansible-${1} $(git log -n1 --oneline)"
  cd $pwd
}

function finish {
  rm $PLAYBOOK
}

if [[ ! -e $PLAYBOOK ]]; then
  ln -s $DIR/$ROLE_NAME.yml $PLAYBOOK
fi

if [[ "$DEV_MODE" == 'false' ]]; then
  checkout_role "deploy"
  checkout_role "provision"
  trap finish EXIT
fi

if [[ "$ARG1" == "install" || "$ARG1" == "update" ]]; then
  exit
fi

# ARGS="$ARGS $@"

if [[ ! -e $inventory/hosts && ! -e $inventory/hosts.ini ]]; then
  prefix=$1
  shift
  group=$1
  shift
  echo "No hosts detected using $prefix/$group"
  echo "[$group]" > $inventory/hosts
  echo "${prefix}" >> $inventory/hosts
  # ARGS="$ARGS -i .hosts"
  delete_hosts() {
    rm inventory/hosts
  }
  trap delete_hosts EXIT
fi

export ANSIBLE_HASH_BEHAVIOUR=merge
export DISPLAY_SKIPPED_HOSTS=false
export DISPLAY_OK_HOSTS=false
export ANSIBLE_CALLBACK_WHITELIST=dense2
export ANSIBLE_STDOUT_CALLBACK=dense2
export ANSIBLE_CALLBACK_PLUGINS=$DIR/callback_plugins
export ANSIBLE_INVENTORY_IGNORE_REGEX=build/*

echo ansible-playbook $PLAYBOOK $ARGS
eval ansible-playbook  $ARGS $@ $PLAYBOOK
  - local_action: file path="build/{{inventory_hostname}}/group_vars" state=directory

  - name: saving hostvars
    local_action: copy content="{{hostvars[inventory_hostname] | to_json}}" dest="build/{{inventory_hostname}}/group_vars/all.json"

  - name: running ansible-deploy to generate cloudinit file
    local_action: shell ansible-deploy -i {{inventory_dir}} -i build/{{inventory_hostname}} -l {{inventory_hostname}} -e target=cloudinit -c local

  - set_fact:
       userData: "{{lookup('file', inventory_dir + '/build/' + inventory_hostname + '.txt') | b64encode }}"
    delegate_to: localhost
    tag: always

  - block:
        - debug: msg="Looking up existing user data definition to reuse"
        - ec2_instance_attribute_facts:
            instance_id: "{{ec2_instance.id}}"
            attribute: "userData"
            region: "{{region}}"
          register: userDataFact
        - set_fact: userData="{{userDataFact.attributes.UserData.Value}}"
    when: ec2_instance is defined and (userData_update is defined and userData_update == 'false')
    delegate_to: localhost
